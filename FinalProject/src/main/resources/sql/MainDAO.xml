<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTDEMapper3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bit.model.dao.MainDAO">

	<resultMap type="com.bit.model.dto.UserDTO" id="userMap">
		<id property="userNo" column="userNo" />
		<result property="userNo" column="userNo" />
		<result property="email" column="email" />
		<result property="pw" column="pw" />
		<result property="name" column="name" />
		<result property="userImage" column="userImage" />
		<result property="alert" column="alert" />
		<result property="gender" column="gender" />
		<result property="loginFailCount" column="loginFailCount" />
		<result property="loginCountDate" column="loginCountDate" />
		<result property="countryCode" column="countryCode" />
		<result property="key" column="key" />
		<collection property="roles" resultMap="roleMap">
		</collection>
	</resultMap>

	<resultMap type="com.bit.model.vo.UserRoleVO" id="roleMap">
		<result property="roleNo" column="roleNo" />
		<result property="userNo" column="userNo" />
		<result property="roleName" column="roleName" />
	</resultMap>



	<select id="getUserAllInfo" resultMap="userMap">

		select *
		from user_info
		inner join user_role
		on user_info.userNO = user_role.userNo
		where user_info.email = #{email}

	</select>
	
	<select id="getJoinCheck" resultType="String" >

		select user_info.email
		from user_info
		where user_info.email = #{email}

	</select>
	

	<insert id="setUserInfo" parameterType="com.bit.model.dto.UserDTO">
		<selectKey keyProperty="userNo" resultType="int" order="BEFORE">
		SELECT USERINFOSEQ.NEXTVAL FROM DUAL
		</selectKey>
		
		insert all 
		into user_info 
		values (#{userNo}, #{email}, #{pw}, #{name}, #{userNo}, 0, #{gender}, 0, localtimestamp(0), 082, #{key})
		into user_role (roleNo, userNo, roleName) 
		values 
		<foreach item="roles" collection="roles" separator=",">
		(USERROLESEQ.NEXTVAL, #{userNo}, #{roles.roleName})
  		</foreach>
		SELECT * FROM DUAL
		
	</insert>
	
	<update id="setEmailCheck">
	
	update user_info
	set key = 'Y'
	where email = #{email} and key = #{key}
	
	</update>
	
	<update id="setLoginFailCount">

	update user_info
	set loginFailCount = loginFailCount + 1 
	where email = #{email}
	
	</update>
	
</mapper>
